AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Backend para ShiftEmotion basado en AWS Lambda

Globals:
  Function:
    Timeout: 5

Resources:
  #Definici√≥n de la API
  ShiftEmotionBackendAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: jwtAuthorizer
        Authorizers:
          jwtAuthorizer:
            FunctionPayloadType: TOKEN
            FunctionArn: !GetAtt JwtValidationFunction.Arn
            Identity:
              Headers:
                - tokenHeader

  JwtValidationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: jwtValidation/
      Handler: index.handler
      Runtime: nodejs12.x
      Tracing: Active

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: login/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /login
            Method: GET
            Authorizer: NONE

  RegistroFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: registro/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /registrar
            Method: POST
            Authorizer: NONE

  GenerarTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: generarToken/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /reset-password
            Method: GET
            Authorizer: NONE

  ResetPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: resetPassword/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /reset-password
            Method: POST
            Authorizer: NONE

  RecomendacionInicialFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: recomendacionInicial/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/home
            Method: GET

  HistorialFotosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: historialFotos/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/historial
            Method: GET

  RecomendacionFotoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: recomendacionFoto/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/historial/recomendacion
            Method: GET

  ObtenerPerfilFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: obtenerPerfil/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /perfil
            Method: GET

  ActualizarPerfilFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: actualizarPerfil/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        CatchAll:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /perfil
            Method: PUT

Outputs:
  HelloWorldAPI:
    Description: "API Gateway endpoint URL for Prod environment for First Function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "First Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
