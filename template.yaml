AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Backend para ShiftEmotion basado en AWS Lambda

Globals:
  Function:
    Timeout: 5

Resources:
  #Definici√≥n de la API
  ShiftEmotionBackendAPI:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        DefaultAuthorizer: JwtAuthorizer
        Authorizers:
          JwtAuthorizer:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer: "https://dev-3xan4m44.auth0.com/"
              audience:
                - https://auth0-jwt-authorizer
      StageName: Prod
      CorsConfiguration: 
        AllowMethods:
          - GET
          - POST
          - PUT
          - OPTIONS
        AllowHeaders:
          - Authorization
          - Content-Type
        ExposeHeaders:
          - Authorization
          - Content-Type
        AllowOrigins:
          - "*"

  JwtValidationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: npm_services/jwtValidation/
      Handler: index.handler
      Runtime: nodejs12.x
      Tracing: Active

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/login/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ShiftEmotionBackendAPI
            Path: /login
            Method: GET
            Auth:
              Authorizer: NONE

  LoginTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SpotifyBase64Key: !Ref SpotifyKey
      CodeUri: go_services/login_token
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ShiftEmotionBackendAPI
            Path: /login/token
            Method: POST
            Auth:
              Authorizer: NONE

  RecomendacionInicialFunction:
    Type: AWS::Serverless::Function
    Properties:
      Environment:
        Variables:
          SpotifyBase64Key: !Ref SpotifyKey
      CodeUri: go_services/recomendacionInicial/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/home
            Method: GET

  HistorialFotosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/historialFotos/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
      Events:
        GetRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/historial
            Method: GET

  RecomendacionFotoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/recomendacionFoto/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Policies:
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
      Events:
        GetRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/historial/recomendacion
            Method: GET

  ObtenerPerfilFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/obtenerPerfil/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Policies:
        - AmazonDynamoDBFullAccess
      Events:
        GetRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ShiftEmotionBackendAPI
            Path: /perfil
            Method: GET
Parameters:
  SpotifyKey:
    Type: String
    Default: SPOTIFY_BASE64_KEY