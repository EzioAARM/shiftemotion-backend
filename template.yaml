AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Backend para ShiftEmotion basado en AWS Lambda

Globals:
  Function:
    Timeout: 5

Resources:
  #Definici√≥n de la API
  ShiftEmotionBackendAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:	
        AllowMethods: "'POST, GET, PUT'"	
        AllowHeaders: "'*'"	
        AllowOrigin: "'*'"
      Auth:
        DefaultAuthorizer: None
        Authorizers:
          jwtAuthorizer:
            FunctionPayloadType: TOKEN
            FunctionArn: !GetAtt JwtValidationFunction.Arn
            Identity:
              Headers:
                - tokenHeader

  JwtValidationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: npm_services/jwtValidation/
      Handler: index.handler
      Runtime: nodejs12.x
      Tracing: Active

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/login/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /login
            Method: GET
            Cors: true
            Auth:
              Authorizer: NONE

  LoginTokenFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/login_token
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /login/token
            Method: POST
            Cors: true
            Auth:
              Authorizer: NONE

  RecomendacionInicialFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/recomendacionInicial/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/home
            Method: GET
            Cors: true
            Auth:
              Authorizer: jwtAuthorizer

  HistorialFotosFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/historialFotos/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/historial
            Method: GET
            Cors: true
            Auth:
              Authorizer: jwtAuthorizer

  RecomendacionFotoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/recomendacionFoto/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /recomendaciones/historial/recomendacion
            Method: GET
            Cors: true
            Auth:
              Authorizer: jwtAuthorizer

  ObtenerPerfilFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: go_services/obtenerPerfil/
      Handler: main
      Runtime: go1.x
      Tracing: Active
      Events:
        GetRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ShiftEmotionBackendAPI
            Path: /perfil
            Method: GET
            Cors: true
            Auth:
              Authorizer: jwtAuthorizer
